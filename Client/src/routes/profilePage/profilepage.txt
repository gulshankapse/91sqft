import { Await, Link, useLoaderData, useNavigate } from "react-router-dom";
import List from "../../componants/list/list";
import "./profilePage.scss";
import axios from "axios";
import { Suspense, useContext } from "react";
import LoadingList from "../../componants/loadinglist/loadinglist.jsx";
import { authContext } from "../../context/authContext.jsx";
import Chat from "../../componants/chat/chat.jsx";


function ProfilePage() {
    const data = useLoaderData();
    const navigate = useNavigate();
    const {currentUser , updateUser} = useContext(authContext);

    const handleLogout = async ()=> {
      try {
        const res = await axios.post("http://localhost:8800/logout" , { withCredentials: true });
        updateUser(null);
        navigate("/");
      }
      catch(err) {
        console.log(err);
      }
    }

    return (
        <div className="profilePage">
            <div className="details">
                <div className="wrapper">
                    <div className="title">
                        <h1>User Information</h1>
                        <Link to="/user/update">
                           <button>Update</button>
                        </Link>
                    </div>
                    <div className="info">
                        <img src={currentUser.profilePic || "/noDP.png"} alt="" />
                        <div className="name">
                           <span>Username : <b>{currentUser.username}</b></span>  
                           <span>E-mail : <b>{currentUser.email}</b></span>
                           <button onClick={handleLogout} >Logout</button>
                        </div>
                    </div>
                    <div className="title">
                        <h1>My List</h1>
                        <div className="createContainer">
                        <span className="createText">Add</span>
                            <Link to="/add">
                               <img src="/add.png" alt="Create" className="createImage" />
                            </Link>
                        </div>
                    </div>
                    <div className="line"></div>
                    <Suspense fallback={<LoadingList />}>
                       <Await resolve={data.postResponse} errorElement={ <p>Error loading posts!</p> }>
                            {(postResponse)=> <List posts = {postResponse.data.userPosts}/> }
                        </Await>        
                    </Suspense>
                    <div className="title">
                        <h1>Saved List</h1>
                    </div>
                    <Suspense fallback={<LoadingList />}>
                        <Await resolve={data.postResponse} errorElement={ <p>Error loading posts!</p> }>
                            {(postResponse)=> <List posts = {postResponse.data.savedPosts}/> }
                        </Await>        
                    </Suspense>
                </div>
            </div>
            <div className="chatContainer">
                <div className="wrapper">
                    <Chat/>
                </div>
            </div>
        </div>
    )
}

export default ProfilePage;




.profilePage {
    display: flex;
    height: 100%;

    .details {
        flex: 3;
        overflow-y: scroll;
        
        .wrapper {
            display: flex;
            flex-direction: column;
            gap: 10px;
            padding-right: 50px;
            margin-top: 20px;
            .line {
                height: 1px;
                background-color: #57bf99;
                margin-bottom: 30px;
            }
            .title {
                margin-top: 30px;
                display: flex;
                align-items: center;
                justify-content: space-between;
                
                h1 {
                    font-size: 21px;
                    color: #333;
                }
                button {
                    width: 70px;
                    height: 30px;
                    border-radius: 3px;
                    border: none;
                    background-color: #fece51;
                    cursor: pointer;
                }
                .createContainer {
                    display: flex;
                    gap: 10px; 
                    align-items: center;

                    .createText {
                        font-size: 16px; 
                        color: #666; 
                        font-weight: bold;
                    }
                
                    .createImage {
                        width: 25px;
                        height: 25px; 
                        cursor: pointer;
                        border-radius: 50%;
                        transition: transform 0.2s ease-in-out;
                
                        &:hover {
                            transform: scale(1.1);
                        }
                    }
                }                
            }
            .info {
                display: flex;
                height: 90px;
                gap: 40px;
                .name {
                    display: flex;
                    flex-direction: column;
                    span {
                        margin-bottom: 10px;
                        font-size: 14px;
                        display: flex;
                        gap: 10px;
                    }
                    button {
                        height: 30px;
                        width: 100px;
                        color: white;
                        //background-color: #1a6e6e;
                        background: linear-gradient(to bottom right, #1ba0db, #57bf99);
                        border: none;
                        border-radius: 3px;
                        margin-top: auto;
                        cursor: pointer;
                    }
                }
                img {
                    width: 90px;
                    height: 90px;
                    object-fit: cover;
                    border-radius: 5px;
                }
            }
        }
    }
    .details::-webkit-scrollbar {
        display: none; 
    }

    .chatContainer {
        flex: 2;
        //background-color: #fcf5f3;
        background: linear-gradient(to bottom, #f3fffb , #e4eaec);
        height: 100%;

        .wrapper {
            padding: 0px 10px;
            height: 95%;
            margin-bottom: 50px;
        }
    }
}