import { useState } from "react";
import { Await, useLoaderData } from "react-router-dom";
import { Suspense } from "react";
import "./listPage.scss";
import Filter from "../../componants/filter/filter.jsx";
import Card from "../../componants/card/card.jsx";
import Map from "../../componants/map/map.jsx";
import LoadingList from "../../componants/loadinglist/loadinglist.jsx";
import LoadingMap from "../../componants/loadingmap/loadingmap.jsx";

function ListPage() {
    const data = useLoaderData();
    const [openFilter, setOpenFilter] = useState(false);
    const [openMap, setOpenMap] = useState(false);

    const toggleFilter = () => {
        setOpenFilter(!openFilter);
        setOpenMap(false);
    };

    const toggleMap = () => {
        setOpenMap(!openMap);
        setOpenFilter(false);
    };

    return (
        <div className="listpage">
            {/* Filter Sidebar */}
            <div className={`filtercontainer ${openFilter ? "active" : ""}`}>
                <Filter />
            </div>

            {/* List + Buttons */}
            <div className="listcontainer">
                {/* Top buttons (only show on tablet/mobile) */}
                <div className="top-buttons">
                    <button onClick={toggleFilter}>
                        {openFilter ? "Close Filter" : "Open Filter"}
                    </button>
                    <button onClick={toggleMap}>
                        {openMap ? "Close Map" : "Open Map"}
                    </button>
                </div>

                <div className="wrapper">
                    <Suspense fallback={<LoadingList />}>
                        <Await resolve={data.postResponse} errorElement={<p></p>}>
                            {(postResponse) =>
                                postResponse.data.map((post) => (
                                    <Card item={post} key={post.id} />
                                ))
                            }
                        </Await>
                    </Suspense>
                </div>
            </div>

            {/* Map Sidebar */}
            <div className={`mapcontainer ${openMap ? "active" : ""}`}>
                <div className="mapWrapper">
                    <Suspense fallback={<LoadingMap />}>
                        <Await resolve={data.postResponse} errorElement={<p></p>}>
                            {(postResponse) => <Map items={postResponse.data} />}
                        </Await>
                    </Suspense>
                </div>
            </div>
        </div>
    );
}

export default ListPage;














.listpage {
    display: flex;
    height: 100vh;
    width: 100vw;
    position: relative;

    .filtercontainer {
        max-width: 210px;
        min-width: 210px;
        height: 100%;
        border-right: 1px solid #ddd;
        background-color: #fff;
    }

    .listcontainer {
        flex: 1;
        max-width: 450px;
        min-width: 450px;
        height: 100%;
        overflow: hidden;
        background-color: whitesmoke;
        display: flex;
        flex-direction: column;

        .top-buttons {
            display: none;
            padding: 10px;
            background: #fff;
            border-bottom: 1px solid #ddd;
            z-index: 5;
            position: relative;

            button {
                margin-right: 10px;
                padding: 8px 16px;
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 4px;
                font-size: 14px;
                cursor: pointer;
            }
        }

        .wrapper {
            flex: 1;
            height: 100%;
            padding: 20px;
            padding-bottom: 50px;
            margin-top: 0px;
            gap: 20px;
            display: flex;
            flex-direction: column;
            overflow-y: auto;
            background-color: whitesmoke;
            box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.1) inset;
        }
    }

    .mapcontainer {
        flex: 1;
        height: calc(100vh - 60px);
        padding: 40px;
        border-left: 1px solid #ddd;
        background-color: #fff;

        .mapWrapper {
            width: 100%;
            height: 100%;
        }
    }
}

/* --- TABLET VIEW (768px to 1024px) --- */
@media (max-width: 1024px) {
    .listpage {
        .listcontainer {
            max-width: 100%;
            min-width: 100%;

            .top-buttons {
                display: flex;
            }
        }

        .filtercontainer {
            max-width: 210px;
            min-width: 210px;
            position: relative;
            transform: none;
            z-index: 2;
        }

        .mapcontainer {
            position: fixed;
            right: 0;
            top: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            background: white;
            transform: translateX(100%);
            transition: transform 0.3s ease;
            padding: 0;
            border: none;
            z-index: 100;
        }

        .mapcontainer.active {
            transform: translateX(0);
        }
    }
}

/* --- MOBILE VIEW (<768px) --- */
@media (max-width: 768px) {
    .listpage {
        .filtercontainer,
        .mapcontainer {
            position: fixed;
            top: 0;
            bottom: 0;
            height: 100%;
            transition: transform 0.3s ease;
            background: white;
            z-index: 100;
        }

        .filtercontainer {
            left: 0;
            width: 80%;
            max-width: 300px;
            transform: translateX(-100%);
            box-shadow: 2px 0 8px rgba(0, 0, 0, 0.2);
        }

        .mapcontainer {
            right: 0;
            width: 100%;
            transform: translateX(100%);
            padding: 0;
            border: none;
        }

        .filtercontainer.active {
            transform: translateX(0);
        }

        .mapcontainer.active {
            transform: translateX(0);
        }

        .listcontainer {
            .top-buttons {
                display: flex;
            }
        }
    }
}
